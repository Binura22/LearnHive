# Server Port
server.port=8080

# MongoDB Configuration
spring.data.mongodb.uri=use-your-own-mongodb-uri-here
# OAuth2 Configuration - Google
spring.security.oauth2.client.registration.google.client-id=use-your-own-client-id-here
spring.security.oauth2.client.registration.google.client-secret=use-your-own-client-secret-here
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

# OAuth2 Configuration - GitHub
spring.security.oauth2.client.registration.github.client-id=use-your-own-client-id-here
spring.security.oauth2.client.registration.github.client-secret=use-your-own-client-secret-here
spring.security.oauth2.client.registration.github.scope=read:user,user:email
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github


# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin123
spring.security.user.roles=ADMIN

# Session Configuration
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax

# Cloudinary Configuration
cloudinary.cloud-name=use-your-cloud-name-here
cloudinary.api-key=use-your-own-key-here
cloudinary.api-secret=use-your-own-secret-here
cloudinary.upload-preset=LearnHive

# File Upload Configuration
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.enabled=true

openai.api.key=Please-use-your-own-key-here
